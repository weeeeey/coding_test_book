# 빅오 표기법은 최악의 시간 복잡도를 표시 하는것 
# 세타 표기법: 평균복잡도
# 오메가 표기법 : 최선의 시간 복잡도
# cf) 퀵소트의 평균은 (n)log(n), 최악은 n^2 => 따라서 퀵솟은 O(nlog(n))
# cf) 파이썬의 기본 정렬 라이브러리는 내부적으로 c언어를 기반으로 최적화 되어 있음. (퀵보다도 더 빠르다)
'''
[선택정렬]
첫번쨰 인덱스부터 순서대로 피벗으로 삼아 그 다음 수중 최소값을 해당 인덱스와 스왑 (비교 시 arr[피벗] 도 포함 )
O(n^2)
n+(n-1)+(n-2)+...+2 => O(n^2)
'''
arr = [2,42,6,7]
for i in range(len(arr)):
  min_t = i
  for j in range(i+1,len(arr)):
    if arr[min_t]>arr[j]:
      min_t=j
  arr[i] ,arr[min_t] = arr[min_t], arr[i]
  
  
'''
[삽입 정렬]
선택 정렬에 비해 실행 시간 효율적
필요할 때만 위치를 바꿈 ( 정렬된 상태일떄 최적화 ) - > 오메가(n)
피벗 이전 데이터들은 정려된 상태라고 가정
피벗값보다 작을 경우 (오름차순 일 경우) 피벗부터 시작하여 이전 값들과 비교
큰 값을 찾기 전까지 위치를 바꾸어준다
O(n^2)
'''
arr = [2,42,6,7]
for i in range(1,len(arr)):
  for j in range(i,0,-1):
    if arr[j] < arr[j-1]:
      arr[j],arr[j-1] = arr[j-1],arr[j]
    else:
      break

'''
[퀵소트]
정렬 알고리즘 중 가장 많이 사용된다
피벗을 기준으로 왼쪽에는 피벗보다 작은, 오른쪽에는 피벗보다 큰 (오름차순 기준)
분할 정복

'''
